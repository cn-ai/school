/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.24
 * Generated at: 2018-12-02 13:34:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("  <!-- Required meta tags -->\n");
      out.write("  <meta charset=\"utf-8\">\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n");
      out.write("  <title>Purple Admin</title>\n");
      out.write("  <!-- plugins:css -->\n");
      out.write("  <link rel=\"stylesheet\" href=\"vendors/iconfonts/mdi/css/materialdesignicons.min.css\">\n");
      out.write("  <link rel=\"stylesheet\" href=\"vendors/css/vendor.bundle.base.css\">\n");
      out.write("  <!-- endinject -->\n");
      out.write("  <!-- plugin css for this page -->\n");
      out.write("  <!-- End plugin css for this page -->\n");
      out.write("  <!-- inject:css -->\n");
      out.write("  <link rel=\"stylesheet\" href=\"css/style.css\">\n");
      out.write("  <!-- endinject -->\n");
      out.write("  <link rel=\"shortcut icon\" href=\"images/logo.jpg\" />\n");
      out.write("  <link rel=\"stylesheet\" href=\"/jboa/css/jquery.slider.css\">\n");
      out.write("\n");
      out.write("  <style>\n");
      out.write("\tbody {\n");
      out.write("\t\tbackground: #1f1e1e;\n");
      out.write("\t\tfont-family: \"微软雅黑\";\n");
      out.write("\t\tcolor: #fff;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tbutton {\n");
      out.write("\t\tdisplay: inline-block;\n");
      out.write("\t\tpadding: 6px 12px;\n");
      out.write("\t\tline-height: 1.4;\n");
      out.write("\t\ttext-align: center;\n");
      out.write("\t\tborder: 1px solid transparent;\n");
      out.write("\t\tborder-radius: 4px;\n");
      out.write("\t\tcolor: #fff;\n");
      out.write("\t\tbackground-color: #5bc0de;\n");
      out.write("\t\tborder-color: #46b8da;\n");
      out.write("\t\tcursor: pointer;\n");
      out.write("\t\tfont-size: 15px;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t.container {\n");
      out.write("\t\t/*width: 1080px;\n");
      out.write("\t\theight: 600px;\n");
      out.write("\t\tposition: absolute;\n");
      out.write("\t\ttop: 0;\n");
      out.write("\t\tleft: 0;\n");
      out.write("\t\tright: 0;\n");
      out.write("\t\tbottom: 0;\n");
      out.write("\t\tmargin: auto;*/\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t.demo1 {\n");
      out.write("\t\twidth: 48%;\n");
      out.write("\t\theight: 100%;\n");
      out.write("\t\tfloat: left;\n");
      out.write("\t\tpadding: 20px;\n");
      out.write("\t/*\tborder: 1px dashed #fff;*/\n");
      out.write("\t\tborder-radius: 4px;\n");
      out.write("\t\tbox-sizing: border-box;\n");
      out.write("\t\tposition: relative;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("/*\t.demo2 {\n");
      out.write("\t\twidth: 48%;\n");
      out.write("\t\theight: 100%;\n");
      out.write("\t\tfloat: right;\n");
      out.write("\t\tpadding: 20px;\n");
      out.write("\t\tborder: 1px dashed #fff;\n");
      out.write("\t\tborder-radius: 4px;\n");
      out.write("\t\tbox-sizing: border-box;\n");
      out.write("\t\tposition: relative;\n");
      out.write("\t}\n");
      out.write("\t*/\n");
      out.write("\t.btns,\n");
      out.write("\t.slider,\n");
      out.write("\t.result {\n");
      out.write("\t\tmargin-bottom: 40px;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tpre {\n");
      out.write("\t\tfont-size: 13px;\n");
      out.write("\t}\n");
      out.write("</style>\n");
      out.write("  \n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("  <div class=\"container-scroller\">\n");
      out.write("    <div class=\"container-fluid page-body-wrapper full-page-wrapper\">\n");
      out.write("      <div class=\"content-wrapper d-flex align-items-center auth\">\n");
      out.write("        <div class=\"row w-100\">\n");
      out.write("          <div class=\"col-lg-4 mx-auto\">\n");
      out.write("            <div class=\"auth-form-light text-left p-5\">\n");
      out.write("              <div>\n");
      out.write("                 <img class=\"brand-logo\" src=\"images/bitbug_favicon.ico\" alt=\"logo\" width=\"48\" height=\"48\" />\n");
      out.write("\t\t\t\t <h2 style=\"display: inline;color:#198ae3\">清泉办公管理系统</h2>\n");
      out.write("              </div>\n");
      out.write("            \n");
      out.write("              <form class=\"pt-3\" action=\"/jboa/login/dl\" method=\"get\" id=\"cn_myform\" >\n");
      out.write("                <div class=\"form-group\">\n");
      out.write("                  <h5 style=\"color:black;\">用户名:</h5>\n");
      out.write("                  <input type=\"email\" name=\"employeename\" class=\"form-control form-control-lg\" id=\"exampleInputEmail1\" placeholder=\"用户名\">\n");
      out.write("                </div>\n");
      out.write("                <div class=\"form-group\">\n");
      out.write("                  <h5 style=\"color:black;\">密码:</h5>\n");
      out.write("                  <input type=\"password\" name=\"password\" class=\"form-control form-control-lg\" id=\"exampleInputPassword1\" placeholder=\"密码\">\n");
      out.write("                </div>\n");
      out.write("         \n");
      out.write("                <div class=\"container mt-3\" style=\"height:34px;\">\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t<div id=\"slider1\" class=\"slider\"></div>\n");
      out.write("\t\t\t\t\t\t\t<div class=\"result\" style=\"margin: 0px;display: none;\">验证结果：<span id=\"result1\"></span></div>\n");
      out.write("    \t\t\t\t\n");
      out.write("   \t\t\t\t </div>      \n");
      out.write("                <div class=\"\" style=\"margin-top: 20px;\">\n");
      out.write("                <input type=\"button\" value=\"登      录\" class=\"dl btn btn-block btn-gradient-primary btn-lg font-weight-medium auth-form-btn\"/>\n");
      out.write("                </div>\n");
      out.write("               \n");
      out.write("              </form>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("      <!-- content-wrapper ends -->\n");
      out.write("    </div>\n");
      out.write("    <!-- page-body-wrapper ends -->\n");
      out.write("  </div>\n");
      out.write("  <!-- container-scroller -->\n");
      out.write("  <!-- plugins:js -->\n");
      out.write("  <script src=\"vendors/js/vendor.bundle.base.js\"></script>\n");
      out.write("  <script src=\"vendors/js/vendor.bundle.addons.js\"></script>\n");
      out.write("  <!-- endinject -->\n");
      out.write("  <!-- inject:js -->\n");
      out.write("  <script src=\"js/off-canvas.js\"></script>\n");
      out.write("  <script src=\"js/misc.js\"></script>\n");
      out.write("  <!-- endinject -->\n");
      out.write("</body>\n");
      out.write("<script type=\"text/javascript\" src=\"/jboa/js/login/jquery.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/jboa/js/login/jquery.slider.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t$(\".dl\").click(function(){\n");
      out.write("\t\tvar name=$(\"[name=employeename]\").val();\n");
      out.write("\t\tvar pwd=$(\"[name=password]\").val();\n");
      out.write("\t\tvar yz=$(\"#result1\").text();\n");
      out.write("\t\tif(name==\"\"){\n");
      out.write("\t\t\talert(\"用户名不能为空\");\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\t\tif(pwd=\"\"){\n");
      out.write("\t\t\talert(\"密码不能为空\");\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\t\tif(yz==false){\n");
      out.write("\t\t\talert(\"请滑动验证码！\");\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\t\t$(\"#cn_myform\").submit();\n");
      out.write("\t})\n");
      out.write("\n");
      out.write("\t$(\"#slider1\").slider({\n");
      out.write("\t\tcallback: function(result) {\n");
      out.write("\t\t\t$(\"#result1\").text(result);\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("/*\n");
      out.write("\t$(\"#slider2\").slider({\n");
      out.write("\t\twidth: 340, // width\n");
      out.write("\t\theight: 40, // height\n");
      out.write("\t\tsliderBg: \"rgb(134, 134, 131)\", // 滑块背景颜色\n");
      out.write("\t\tcolor: \"#fff\", // 文字颜色\n");
      out.write("\t\tfontSize: 14, // 文字大小\n");
      out.write("\t\tbgColor: \"#33CC00\", // 背景颜色\n");
      out.write("\t\ttextMsg: \"按住滑块，拖拽验证\", // 提示文字\n");
      out.write("\t\tsuccessMsg: \"验证通过了哦\", // 验证成功提示文字\n");
      out.write("\t\tsuccessColor: \"red\", // 滑块验证成功提示文字颜色\n");
      out.write("\t\ttime: 400, // 返回时间\n");
      out.write("\t\tcallback: function(result) { // 回调函数，true(成功),false(失败)\n");
      out.write("\t\t\t$(\"#result2\").text(result);\n");
      out.write("\t\t}\n");
      out.write("\t});*/\n");
      out.write("\n");
      out.write("\t// 还原\n");
      out.write("\t$(\"#reset1\").click(function() {\n");
      out.write("\t\t$(\"#slider1\").slider(\"restore\");\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("/*\t$(\"#reset2\").click(function() {\n");
      out.write("\t\t$(\"#slider2\").slider(\"restore\");\n");
      out.write("\t});*/\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
